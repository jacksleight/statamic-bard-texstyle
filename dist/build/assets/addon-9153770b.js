var x=Object.defineProperty;var w=(s,t,e)=>t in s?x(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var b=(s,t,e)=>(w(s,typeof t!="symbol"?t+"":t,e),e);const{Mark:y}=Statamic.$bard.tiptap.core,_=y.create({name:"btsSpan",parseHTML(){return[{tag:"span[data-bts]"}]},renderHTML({HTMLAttributes:s}){return["span",s,0]},addCommands(){return{btsToggleSpan:s=>({commands:t})=>t.toggleMark(this.name,s)}}}),{Node:$}=Statamic.$bard.tiptap.core,k=$.create({name:"btsDiv",content:"block+",group:"root",defining:!1,parseHTML(){return[{tag:"div[data-bts]"}]},renderHTML({HTMLAttributes:s}){return["div",s,0]},addCommands(){return{btsToggleDiv:s=>({editor:t,commands:e})=>t.isActive(this.name,s)?e.lift(this.name):t.isActive(this.name)?e.updateAttributes(this.name,s):e.wrapIn(this.name,s)}}}),{Extension:C}=Statamic.$bard.tiptap.core,S=C.create({name:"btsCore",addOptions(){return{bard:{},attr:null,styleTypes:[]}},addGlobalAttributes(){const{attr:s,styleTypes:t}=this.options;return[{types:t,attributes:{[s]:{parseHTML:e=>e.getAttribute("data-bts"),renderHTML:e=>({["data-bts"]:e[s]})}}}]},addCommands(){return{btsToggleHeading:s=>({commands:t})=>t.toggleNode("heading","paragraph",s),btsToggleParagraph:s=>({commands:t})=>t.toggleNode("paragraph","paragraph",s),btsToggleLink:s=>({commands:t,editor:e})=>e.isActive("link",s)?t.resetAttributes("link","class"):t.updateAttributes("link",s),btsToggleList:(s,t)=>({commands:e,editor:i,chain:r})=>i.isActive(t,s)?e.toggleList(t,"listItem"):i.isActive(t)?e.updateAttributes(t,s):r().toggleList(t,"listItem").updateAttributes(t,s).run(),btsToggleBulletList:s=>({commands:t})=>t.btsToggleList(s,"bulletList"),btsToggleOrderedList:s=>({commands:t})=>t.btsToggleList(s,"orderedList")}},onUpdate(){this.options.bard.$emit("bts-update")},onSelectionUpdate(){this.options.bard.$emit("bts-update")}}),{Extension:T}=Statamic.$bard.tiptap.core,A=T.create({name:"btsOverrides",addOptions(){return{bard:{},styleTypes:[],styleOptions:{}}},onCreate(){const{bard:s,styleTypes:t,styleOptions:e}=this.options,i=[...t.includes("heading")?["h1","h2","h3","h4","h5","h6"]:[],...t.includes("bulletList")?["unorderedlist"]:[],...t.includes("orderedList")?["orderedlist"]:[]];if(s.buttons.forEach(r=>{i.includes(r.name)&&(r.args={...r.args||{},class:null}),r.name==="unorderedlist"&&t.includes("bulletList")&&(r.command=(o,n)=>o.chain().focus().btsToggleBulletList(n).run()),r.name==="orderedlist"&&t.includes("orderedList")&&(r.command=(o,n)=>o.chain().focus().btsToggleOrderedList(n).run())}),s.buttons.find(r=>r.name==="bts_styles")){const r=(s.config.bts_styles||[]).filter(o=>Object.keys(e).includes(o));s.buttons.forEach(o=>{r.includes(o.name)&&(o.visible=()=>!1)})}}}),{Extension:L,getNodeAttributes:lt}=Statamic.$bard.tiptap.core,O=L.create({name:"btsAttributes",addOptions(){return{attributes:{},attributeTypes:{}}},addGlobalAttributes(){const{attributes:s}=this.options;return Object.entries(s).map(([t,e])=>({types:[t],attributes:Object.fromEntries(Object.entries(e).filter(([i,r])=>r.extra).map(([i,r])=>[i,{default:typeof r.default<"u"?r.default:null,rendered:typeof r.rendered<"u"?r.rendered:!0}]))}))},addCommands(){const{attributeTypes:s}=this.options;return{btsAttributesFetch:()=>({state:t})=>{const{from:e,to:i}=t.selection,r=[];return t.doc.nodesBetween(e,e+1,o=>{s.includes(o.type.name)?r.push({kind:"node",type:o.type.name,attrs:{...o.attrs}}):o.type.name==="text"&&o.marks.forEach(n=>{s.includes(n.type.name)&&r.push({kind:"mark",type:n.type.name,attrs:{...n.attrs}})})}),{info:{from:e,to:i},items:r.reverse()}},btsAttributesApply:({info:t,items:e})=>({state:i,chain:r})=>{const{from:o,to:n}=i.selection;if(o!==t.from||n!==t.to)return;let a=r().focus();return e.forEach(l=>{l.kind==="mark"&&(a=a.extendMarkRange(l.type)),a=a.updateAttributes(l.type,l.attrs)}),a.setTextSelection({from:o,to:n}).run()}}}});function p(s,t,e,i,r,o,n,a){var l=typeof s=="function"?s.options:s;t&&(l.render=t,l.staticRenderFns=e,l._compiled=!0),i&&(l.functional=!0),o&&(l._scopeId="data-v-"+o);var c;if(n?(c=function(d){d=d||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,!d&&typeof __VUE_SSR_CONTEXT__<"u"&&(d=__VUE_SSR_CONTEXT__),r&&r.call(this,d),d&&d._registeredComponents&&d._registeredComponents.add(n)},l._ssrRegister=c):r&&(c=a?function(){r.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:r),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(v,g){return c.call(g),u(v,g)}}else{var h=l.beforeCreate;l.beforeCreate=h?[].concat(h,c):[c]}return{exports:s,options:l}}const B={props:{item:Object,config:{},bard:{},editor:{},btsOptions:{}},computed:{active(){if(this.item.hasOwnProperty("active"))return this.item.active(this.editor,this.item.args);const s=this.item.hasOwnProperty("activeName")?"activeName":"name",t=this.item[s];return this.editor.isActive(t,this.item.args)},visible(){return this.item.hasOwnProperty("btsMenuVisible")?this.item.btsMenuVisible(this.editor,this.item.args):!0},previewMatch(){return(this.item.btsStyle?[this.item.name,this.item.btsStyle.type,this.item.btsStyle.level?`h${this.item.btsStyle.level}`:null]:[this.item.name]).join(" ")}},methods:{click(){this.item.command(this.editor,this.item.args),this.$emit("picked")}}};var j=function(){var t=this,e=t._self._c;return t.visible?e("button",{staticClass:"bts-styles-item",class:{active:t.active},on:{click:t.click}},[e("div",{staticClass:"bts-styles-preview",attrs:{"data-bts-match":t.previewMatch}},[t._v(" "+t._s(t.item.text)+" ")])]):t._e()},M=[],P=p(B,j,M,!1,null,null,null,null);const z=P.exports,Z={components:{StylesItem:z},props:{config:{},bard:{},editor:{},btsOptions:{}},created(){this.bard.$on("bts-update",()=>this.$emit("close"))},beforeDestroy(){this.bard.$off("bts-update")},computed:{items(){const s=this.bard.buttons,t=(this.config.bts_styles||[]).filter(e=>Object.keys(this.btsOptions.styleOptions).includes(e));return s.filter(e=>typeof e=="object"&&t.includes(e.name))}}};var E=function(){var t=this,e=t._self._c;return e("div",{staticClass:"bts-panel bts-styles"},[t.items.length?e("div",{staticClass:"bts-styles-items"},t._l(t.items,function(i){return e("StylesItem",{key:i.name,attrs:{item:i,config:t.config,bard:t.bard,editor:t.editor,btsOptions:t.btsOptions},on:{picked:function(r){return t.$emit("picked")}}})}),1):e("div",{staticClass:"jsst4-p-8 w-40 text-center jsst4-text-gray-400"},[e("svg",{staticClass:"w-12 h-12",attrs:{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{staticStyle:{fill:"none","fill-rule":"nonzero","stroke-width":"1.5px"},attrs:{d:"M23.168.832.809 23.191M21 12c0 4.937-4.063 9-9 9s-9-4.063-9-9 4.063-9 9-9 9 4.063 9 9Z",stroke:"currentColor"}})])])])},H=[],I=p(Z,E,H,!1,null,null,null,null);const R=I.exports,N={mixins:[BardToolbarButton],components:{StylesMenu:R},data(){return{panelActive:!1}},methods:{togglePanel(){this.panelActive=!this.panelActive,this.panelActive||this.editor.commands.focus()},closePanel(){this.panelActive&&this.togglePanel()}}};var V=function(){var t=this,e=t._self._c;return e("div",{staticClass:"inline-block relative"},[e("button",{directives:[{name:"tooltip",rawName:"v-tooltip",value:t.button.text,expression:"button.text"}],staticClass:"bard-toolbar-button",attrs:{"aria-label":t.button.text},domProps:{innerHTML:t._s(t.button.html)},on:{click:t.togglePanel}}),t.panelActive?e("StylesMenu",{attrs:{config:t.config,bard:t.bard,editor:t.editor,btsOptions:t.button.btsOptions},on:{close:t.closePanel,picked:t.closePanel}}):t._e()],1)},D=[],F=p(N,V,D,!1,null,null,null,null);const q=F.exports,U={props:{config:{},bard:{},editor:{},btsOptions:{}},data(){const{info:s,items:t}=this.editor.commands.btsAttributesFetch();return{activeItem:0,info:s,items:t,titles:{blockquote:__("Blockquote"),bold:__("Bold"),bulletList:__("Unordered List"),code:__("Code"),codeBlock:__("Code Block"),heading:__("Heading"),horizontalRule:__("Horizontal Rule"),image:__("Image"),italic:__("Italic"),link:__("Link"),listItem:__("List Item"),orderedList:__("Ordered List"),paragraph:__("Paragraph"),strike:__("Strike"),subscript:__("Subscript"),superscript:__("Superscript"),table:__("Table"),tableCell:__("Table Cell"),tableHeader:__("Table Header"),tableRow:__("Table Row"),underline:__("Underline")}}},created(){this.bard.$on("bts-update",()=>this.$emit("close"))},beforeDestroy(){this.bard.$off("bts-update")},methods:{fields(s){return this.btsOptions.attributes[s]},apply(){this.editor.commands.btsAttributesApply({info:this.info,items:this.items}),this.$emit("applied")}}};var G=function(){var t=this,e=t._self._c;return e("div",{staticClass:"bts-panel"},[t.items.length?e("div",[t._l(t.items,function(i,r){return e("div",[e("div",{staticClass:"font-bold jsst4-px-4 jsst4-py-2.5 jsst4-bg-gray-100 title-case border-b flex items-center cursor-pointer",on:{click:function(o){t.activeItem=r}}},[e("svg",{staticClass:"w-4 h-4 bts-arrow jsst4-text-gray-700",class:{"rotate-90":t.activeItem===r},attrs:{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor"}},[e("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round",d:"M8.25 4.5l7.5 7.5-7.5 7.5"}})]),t._v(" "+t._s(t.titles[i.type])+" ")]),t.activeItem===r?e("div",{staticClass:"jsst4-p-4 jsst4-pt-1 border-b"},t._l(t.fields(i.type),function(o,n){return e("div",{staticClass:"jsst4-mt-3"},[o.type==="toggle"?e("label",{staticClass:"flex items-baseline jsst4-gap-1 font-normal"},[e("input",{directives:[{name:"model",rawName:"v-model",value:i.attrs[n],expression:"item.attrs[name]"}],attrs:{type:"checkbox","true-value":!0,"false-value":null},domProps:{checked:Array.isArray(i.attrs[n])?t._i(i.attrs[n],null)>-1:i.attrs[n]},on:{change:function(a){var l=i.attrs[n],c=a.target,u=c.checked?!0:null;if(Array.isArray(l)){var h=null,d=t._i(l,h);c.checked?d<0&&t.$set(i.attrs,n,l.concat([h])):d>-1&&t.$set(i.attrs,n,l.slice(0,d).concat(l.slice(d+1)))}else t.$set(i.attrs,n,u)}}}),e("div",{staticClass:"text-sm"},[t._v(t._s(o.display||n))])]):e("label",{staticClass:"font-normal"},[e("div",{staticClass:"text-sm leading-none"},[t._v(t._s(o.display||n))]),e("input",{directives:[{name:"model",rawName:"v-model",value:i.attrs[n],expression:"item.attrs[name]"}],staticClass:"input h-8 jsst4-p-2 border text-sm jsst4-border-gray-500 rounded jsst4-mt-2",attrs:{type:"text"},domProps:{value:i.attrs[n]},on:{input:function(a){a.target.composing||t.$set(i.attrs,n,a.target.value)}}})])])}),0):t._e()])}),e("div",{staticClass:"flex items-center justify-end font-normal jsst4-px-4 jsst4-py-3"},[e("button",{staticClass:"btn btn-sm",on:{click:t.apply}},[t._v(" "+t._s(t.__("OK"))+" ")])])],2):e("div",{staticClass:"jsst4-p-8 w-40 text-center jsst4-text-gray-400"},[e("svg",{staticClass:"w-12 h-12",attrs:{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{staticStyle:{fill:"none","fill-rule":"nonzero","stroke-width":"1.5px"},attrs:{d:"M23.168.832.809 23.191M21 12c0 4.937-4.063 9-9 9s-9-4.063-9-9 4.063-9 9-9 9 4.063 9 9Z",stroke:"currentColor"}})])])])},W=[],X=p(U,G,W,!1,null,null,null,null);const K=X.exports,J={mixins:[BardToolbarButton],components:{AttributesPanel:K},data(){return{panelActive:!1}},methods:{togglePanel(){this.panelActive=!this.panelActive,this.panelActive||this.editor.commands.focus()},closePanel(){this.panelActive&&this.togglePanel()}}};var Q=function(){var t=this,e=t._self._c;return e("div",{staticClass:"inline-block relative"},[e("button",{directives:[{name:"tooltip",rawName:"v-tooltip",value:t.button.text,expression:"button.text"}],staticClass:"bard-toolbar-button",attrs:{"aria-label":t.button.text},domProps:{innerHTML:t._s(t.button.html)},on:{click:t.togglePanel}}),t.panelActive?e("AttributesPanel",{attrs:{config:t.config,bard:t.bard,editor:t.editor,btsOptions:t.button.btsOptions},on:{close:t.closePanel,applied:t.closePanel}}):t._e()],1)},Y=[],tt=p(J,Q,Y,!1,null,null,null,null);const et=tt.exports;let m=0;const f={classic:{letter:s=>{const t={heading:"H",paragraph:"P",btsSpan:"T"}[s.type]??"S",e=s.ident;return`
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="16" viewBox="0 0 24 16" fill="currentColor" style="width: 24px;">
                    <text text-anchor="middle" x="8.3" y="15" style="font-family: Times, Times New Roman, serif; font-size: 21px;">${t}</text>
                    <text text-anchor="middle" x="20" y="12.5" style="font-size: 12px;">${e}</text>
                </svg>
            `},square:s=>`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <rect width="15" height="15" x="0.5" y="0.5" rx="2" stroke-width="1" stroke="currentColor" fill="none" />
                    <text text-anchor="middle" x="8" y="12" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,"square-solid":s=>{const t=s.ident,e=`bts-mask-${m++}`;return`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <mask id="${e}">
                        <rect width="16" height="16" fill="white" />
                        <text text-anchor="middle" x="8" y="12" style="font-size: 11px;" fill="black">${t}</text>
                    </mask>
                    <rect width="15" height="15" x="0.5" y="0.5" rx="2" stroke-width="1" stroke="currentColor" mask="url(#${e})" />
                </svg>
            `},circle:s=>`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <circle cx="8" cy="8" r="7.5" stroke-width="1" stroke="currentColor" fill="none" />
                    <text text-anchor="middle" x="8" y="12" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,"circle-solid":s=>{const t=s.ident,e=`bts-mask-${m++}`;return`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <mask id="${e}">
                        <rect width="16" height="16" fill="white" />
                        <text text-anchor="middle" x="8" y="12" style="font-size: 11px;" fill="black">${t}</text>
                    </mask>
                    <circle cx="8" cy="8" r="7.5" stroke-width="1" stroke="currentColor" mask="url(#${e})" />
                </svg>
            `},"bullet-list":s=>`
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M384 1408c0 53.33-18.667 98.67-56 136s-82.667 56-136 56-98.667-18.67-136-56-56-82.67-56-136 18.667-98.67 56-136 82.667-56 136-56 98.667 18.67 136 56 56 82.67 56 136Zm0-512c0 53.333-18.667 98.667-56 136-37.333 37.33-82.667 56-136 56s-98.667-18.67-136-56C18.667 994.667 0 949.333 0 896s18.667-98.667 56-136 82.667-56 136-56 98.667 18.667 136 56 56 82.667 56 136Zm0-512c0 53.333-18.667 98.667-56 136s-82.667 56-136 56-98.667-18.667-136-56S0 437.333 0 384s18.667-98.667 56-136 82.667-56 136-56 98.667 18.667 136 56 56 82.667 56 136Z" transform="scale(.00893)"/>
                    <text text-anchor="middle" x="11" y="12" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,"ordered-list":s=>`
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M381 1620c0 53.33-18.167 95.33-54.5 126s-81.5 46-135.5 46c-70.667 0-128-22-172-66l57-88c32.667 30 68 45 106 45 19.333 0 36.167-4.83 50.5-14.5 14.333-9.67 21.5-23.83 21.5-42.5 0-42.67-35-61.33-105-56l-26-56c5.333-6.67 16.167-21.17 32.5-43.5s30.5-40.33 42.5-54c12-13.67 24.333-26.5 37-38.5v-1c-10.667 0-26.833.33-48.5 1-21.667.67-37.833 1-48.5 1v53H32v-152h333v88l-95 115c34 8 61 24.33 81 49s30 54 30 88Zm2-627v159H21c-4-24-6-42-6-54 0-34 7.833-65 23.5-93S73 954.333 95 937s44-33.167 66-47.5c22-14.333 40.833-28.833 56.5-43.5 15.667-14.667 23.5-29.667 23.5-45 0-16.667-4.833-29.5-14.5-38.5S203.667 749 187 749c-30.667 0-57.667 19.333-81 58l-85-59c16-34 39.833-60.5 71.5-79.5S159.333 640 198 640c48.667 0 89.667 13.833 123 41.5s50 65.167 50 112.5c0 33.333-11.333 63.833-34 91.5s-47.667 49.167-75 64.5c-27.333 15.333-52.5 32.167-75.5 50.5-23 18.33-34.833 35.83-35.5 52.5h127v-60h105Zm1-580v99H49v-99h107c0-27.333.167-67.833.5-121.5.333-53.667.5-94.167.5-121.5v-12h-2c-5.333 11.333-22 29.333-50 54l-71-76L170 9h106v404h108Z" transform="scale(.00893)"/>
                    <text text-anchor="middle" x="11" y="12" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,link:s=>`
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M1520 1216c0-26.67-9.33-49.33-28-68l-208-208c-18.67-18.667-41.33-28-68-28-28 0-52 10.667-72 32 2 2 8.33 8.167 19 18.5s17.83 17.5 21.5 21.5c3.67 4 8.67 10.333 15 19 6.33 8.67 10.67 17.17 13 25.5 2.33 8.33 3.5 17.5 3.5 27.5 0 26.67-9.33 49.33-28 68s-41.33 28-68 28c-10 0-19.17-1.17-27.5-3.5-8.33-2.33-16.83-6.67-25.5-13-8.67-6.33-15-11.33-19-15s-11.17-10.83-21.5-21.5-16.5-17-18.5-19c-22 20.67-33 45-33 73 0 26.67 9.333 49.33 28 68l206 207c18 18 40.67 27 68 27 26.67 0 49.33-8.67 68-26l147-146c18.67-18.67 28-41 28-67ZM817 511c0-26.667-9.333-49.333-28-68L583 236c-18.667-18.667-41.333-28-68-28-26 0-48.667 9-68 27L300 381c-18.667 18.667-28 41-28 67 0 26.667 9.333 49.333 28 68l208 208c18 18 40.667 27 68 27 28 0 52-10.333 72-31-2-2-8.333-8.167-19-18.5S611.167 684 607.5 680c-3.667-4-8.667-10.333-15-19s-10.667-17.167-13-25.5c-2.333-8.333-3.5-17.5-3.5-27.5 0-26.667 9.333-49.333 28-68s41.333-28 68-28c10 0 19.167 1.167 27.5 3.5 8.333 2.333 16.833 6.667 25.5 13 8.667 6.333 15 11.333 19 15s11.167 10.833 21.5 21.5 16.5 17 18.5 19c22-20.667 33-45 33-73Zm895 705c0 80-28.33 147.67-85 203l-147 146c-55.33 55.33-123 83-203 83-80.67 0-148.67-28.33-204-85l-206-207c-55.333-55.33-83-123-83-203 0-82 29.333-151.67 88-209l-88-88c-57.333 58.667-126.667 88-208 88-80 0-148-28-204-84L164 652c-56-56-84-124-84-204s28.333-147.667 85-203L312 99c55.333-55.333 123-83 203-83 80.667 0 148.667 28.333 204 85l206 207c55.333 55.333 83 123 83 203 0 82-29.333 151.667-88 209l88 88c57.33-58.667 126.67-88 208-88 80 0 148 28 204 84l208 208c56 56 84 124 84 204Z" transform="matrix(.00702 0 0 .00702 -.562 3.86)"/>
                    <text text-anchor="middle" x="11" y="8" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,symbol:s=>`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <text text-anchor="middle" x="8" y="16" style="font-size: 23px;">${s.ident}</text>
                </svg>
            `},modern:{letter:s=>{const t={heading:"H",paragraph:"P",btsSpan:"T"}[s.type]??"S",e=s.ident;return`
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="16" viewBox="0 0 24 16" fill="currentColor" style="width: 24px;">
                    <text text-anchor="middle" x="8.3" y="15" style="font-family: Times, Times New Roman, serif; font-size: 21px;">${t}</text>
                    <text text-anchor="middle" x="20" y="12.5" style="font-size: 12px;">${e}</text>
                </svg>
            `},square:s=>`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <rect width="15" height="15" x="0.5" y="0.5" rx="2" stroke-width="1" stroke="currentColor" fill="none" />
                    <text text-anchor="middle" x="8" y="12" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,"square-solid":s=>{const t=s.ident,e=`bts-mask-${m++}`;return`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <mask id="${e}">
                        <rect width="16" height="16" fill="white" />
                        <text text-anchor="middle" x="8" y="12" style="font-size: 11px;" fill="black">${t}</text>
                    </mask>
                    <rect width="15" height="15" x="0.5" y="0.5" rx="2" stroke-width="1" stroke="currentColor" mask="url(#${e})" />
                </svg>
            `},circle:s=>`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <circle cx="8" cy="8" r="7.5" stroke-width="1" stroke="currentColor" fill="none" />
                    <text text-anchor="middle" x="8" y="12" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,"circle-solid":s=>{const t=s.ident,e=`bts-mask-${m++}`;return`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <mask id="${e}">
                        <rect width="16" height="16" fill="white" />
                        <text text-anchor="middle" x="8" y="12" style="font-size: 11px;" fill="black">${t}</text>
                    </mask>
                    <circle cx="8" cy="8" r="7.5" stroke-width="1" stroke="currentColor" mask="url(#${e})" />
                </svg>
            `},"bullet-list":s=>`
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M384 1408c0 53.33-18.667 98.67-56 136s-82.667 56-136 56-98.667-18.67-136-56-56-82.67-56-136 18.667-98.67 56-136 82.667-56 136-56 98.667 18.67 136 56 56 82.67 56 136Zm0-512c0 53.333-18.667 98.667-56 136-37.333 37.33-82.667 56-136 56s-98.667-18.67-136-56C18.667 994.667 0 949.333 0 896s18.667-98.667 56-136 82.667-56 136-56 98.667 18.667 136 56 56 82.667 56 136Zm0-512c0 53.333-18.667 98.667-56 136s-82.667 56-136 56-98.667-18.667-136-56S0 437.333 0 384s18.667-98.667 56-136 82.667-56 136-56 98.667 18.667 136 56 56 82.667 56 136Z" transform="scale(.00893)"/>
                    <text text-anchor="middle" x="11" y="12" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,"ordered-list":s=>`
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M381 1620c0 53.33-18.167 95.33-54.5 126s-81.5 46-135.5 46c-70.667 0-128-22-172-66l57-88c32.667 30 68 45 106 45 19.333 0 36.167-4.83 50.5-14.5 14.333-9.67 21.5-23.83 21.5-42.5 0-42.67-35-61.33-105-56l-26-56c5.333-6.67 16.167-21.17 32.5-43.5s30.5-40.33 42.5-54c12-13.67 24.333-26.5 37-38.5v-1c-10.667 0-26.833.33-48.5 1-21.667.67-37.833 1-48.5 1v53H32v-152h333v88l-95 115c34 8 61 24.33 81 49s30 54 30 88Zm2-627v159H21c-4-24-6-42-6-54 0-34 7.833-65 23.5-93S73 954.333 95 937s44-33.167 66-47.5c22-14.333 40.833-28.833 56.5-43.5 15.667-14.667 23.5-29.667 23.5-45 0-16.667-4.833-29.5-14.5-38.5S203.667 749 187 749c-30.667 0-57.667 19.333-81 58l-85-59c16-34 39.833-60.5 71.5-79.5S159.333 640 198 640c48.667 0 89.667 13.833 123 41.5s50 65.167 50 112.5c0 33.333-11.333 63.833-34 91.5s-47.667 49.167-75 64.5c-27.333 15.333-52.5 32.167-75.5 50.5-23 18.33-34.833 35.83-35.5 52.5h127v-60h105Zm1-580v99H49v-99h107c0-27.333.167-67.833.5-121.5.333-53.667.5-94.167.5-121.5v-12h-2c-5.333 11.333-22 29.333-50 54l-71-76L170 9h106v404h108Z" transform="scale(.00893)"/>
                    <text text-anchor="middle" x="11" y="12" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,link:s=>`
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M1520 1216c0-26.67-9.33-49.33-28-68l-208-208c-18.67-18.667-41.33-28-68-28-28 0-52 10.667-72 32 2 2 8.33 8.167 19 18.5s17.83 17.5 21.5 21.5c3.67 4 8.67 10.333 15 19 6.33 8.67 10.67 17.17 13 25.5 2.33 8.33 3.5 17.5 3.5 27.5 0 26.67-9.33 49.33-28 68s-41.33 28-68 28c-10 0-19.17-1.17-27.5-3.5-8.33-2.33-16.83-6.67-25.5-13-8.67-6.33-15-11.33-19-15s-11.17-10.83-21.5-21.5-16.5-17-18.5-19c-22 20.67-33 45-33 73 0 26.67 9.333 49.33 28 68l206 207c18 18 40.67 27 68 27 26.67 0 49.33-8.67 68-26l147-146c18.67-18.67 28-41 28-67ZM817 511c0-26.667-9.333-49.333-28-68L583 236c-18.667-18.667-41.333-28-68-28-26 0-48.667 9-68 27L300 381c-18.667 18.667-28 41-28 67 0 26.667 9.333 49.333 28 68l208 208c18 18 40.667 27 68 27 28 0 52-10.333 72-31-2-2-8.333-8.167-19-18.5S611.167 684 607.5 680c-3.667-4-8.667-10.333-15-19s-10.667-17.167-13-25.5c-2.333-8.333-3.5-17.5-3.5-27.5 0-26.667 9.333-49.333 28-68s41.333-28 68-28c10 0 19.167 1.167 27.5 3.5 8.333 2.333 16.833 6.667 25.5 13 8.667 6.333 15 11.333 19 15s11.167 10.833 21.5 21.5 16.5 17 18.5 19c22-20.667 33-45 33-73Zm895 705c0 80-28.33 147.67-85 203l-147 146c-55.33 55.33-123 83-203 83-80.67 0-148.67-28.33-204-85l-206-207c-55.333-55.33-83-123-83-203 0-82 29.333-151.67 88-209l-88-88c-57.333 58.667-126.667 88-208 88-80 0-148-28-204-84L164 652c-56-56-84-124-84-204s28.333-147.667 85-203L312 99c55.333-55.333 123-83 203-83 80.667 0 148.667 28.333 204 85l206 207c55.333 55.333 83 123 83 203 0 82-29.333 151.667-88 209l88 88c57.33-58.667 126.67-88 208-88 80 0 148 28 204 84l208 208c56 56 84 124 84 204Z" transform="matrix(.00702 0 0 .00702 -.562 3.86)"/>
                    <text text-anchor="middle" x="11" y="8" style="font-size: 11px;">${s.ident}</text>
                </svg>
            `,symbol:s=>`
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                    <text text-anchor="middle" x="8" y="16" style="font-size: 23px;">${s.ident}</text>
                </svg>
            `}},st=(s,t)=>{let e;s.icon?e=s.icon:s.type==="link"?e="link":s.type==="bulletList"?e="bullet-list":s.type==="orderedList"?e="ordered-list":s.type==="btsDiv"?e="square":e="letter";const i=t>=4?f.modern:f.classic;return i[e]?i[e](s):e},rt=`
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="16" viewBox="0 0 24 16" fill="currentColor" style="width: 24px;">
        <text text-anchor="middle" x="12" y="15" style="font-family: Times, Times New Roman, serif; font-size: 21px; letter-spacing: -1px;">Aa</text>
    </svg>
`,it=`
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
        <path d="m491 1536 91-91-235-235-91 91v107h128v128h107Zm523-928c0-14.667-7.33-22-22-22-6.667 0-12.333 2.333-17 7l-542 542c-4.667 4.67-7 10.33-7 17 0 14.67 7.333 22 22 22 6.667 0 12.333-2.33 17-7l542-542c4.67-4.667 7-10.333 7-17Zm-54-192 416 416-832 832H128v-416l832-832Zm683 96c0 35.333-12.33 65.333-37 90l-166 166-416-416 166-165c24-25.333 54-38 90-38 35.33 0 65.67 12.667 91 38l235 234c24.67 26 37 56.333 37 91Z" transform="scale(.00893)"/>
    </svg>
`;class nt{constructor(t){b(this,"types",{heading:{tag:"h",command:"btsToggleHeading",toggleVisibility:!1},paragraph:{tag:"p",command:"btsToggleParagraph",toggleVisibility:!1},btsSpan:{tag:"span",command:"btsToggleSpan",toggleVisibility:!1},link:{tag:"a",command:"btsToggleLink",toggleVisibility:!0},bulletList:{tag:"ul",command:"btsToggleBulletList",toggleVisibility:!1},orderedList:{tag:"ol",command:"btsToggleOrderedList",toggleVisibility:!1},btsDiv:{tag:"div",command:"btsToggleDiv",toggleVisibility:!1}});t={...t,types:this.mergeTypeData(t.types)},this.bootExtensions(t).bootStyleButtons(t).bootStylesButton(t).bootAttributesButton(t).bootCss(t)}mergeTypeData(t){return Object.fromEntries(Object.entries(t).map(([e,i])=>[e,{...i,...this.types[e]}]))}bootExtensions(t){return Statamic.$bard.addExtension(({bard:e})=>S.configure({...t,bard:e})),Statamic.$bard.addExtension(({bard:e})=>A.configure({...t,bard:e})),Statamic.$bard.addExtension(()=>_),t.pro&&(Statamic.$bard.addExtension(()=>O.configure(t)),Statamic.$bard.addExtension(()=>k)),this}bootStyleButtons(t){return Statamic.$bard.buttons((e,i)=>{Object.entries(t.styles).forEach(([r,o])=>{const n=t.types[o.type],a=st(o,t.major),l=o.type==="heading"?{[t.attr]:o[t.store],level:o.level}:{[t.attr]:o[t.store]},c={name:r,text:o.name,args:l,html:a,active:(u,h)=>u.isActive(n.key,h),visible:n.toggleVisibility?u=>u.isActive(n.key):()=>!0,btsMenuVisible:n.toggleVisibility?u=>u.isActive(n.key):()=>!0,command:(u,h)=>u.chain().focus()[n.command](h).run(),btsStyle:o};e.splice(e.indexOf(r),0,i(c))})}),this}bootStylesButton(t){return t.pro?(Statamic.$bard.buttons((e,i)=>{e.splice(e.indexOf("bts_styles"),0,i({name:"bts_styles",text:__("Style"),component:q,html:rt,btsOptions:t}))}),this):this}bootAttributesButton(t){return t.pro?(Statamic.$bard.buttons((e,i)=>{e.splice(e.indexOf("bts_attributes"),0,i({name:"bts_attributes",text:__("Attributes"),component:et,html:it,btsOptions:t}))}),this):this}bootCss(t){const e=[...this.gatherStyleCss(t),...t.pro?this.gatherDivCss(t):[]],i=document.createElement("style");return i.appendChild(document.createTextNode(e.join(" "))),document.head.appendChild(i),this}gatherStyleCss(t){const e=[];return Object.entries(t.styles).forEach(([i,r])=>{const o=t.types[r.type],n=r.type==="heading"?`${o.tag}${r.level}`:`${o.tag}`,a=`.bard-fieldtype .ProseMirror ${n}[data-bts="${r[t.store]}"]`,l=`.bard-fieldtype .ProseMirror ${n}[data-bts="${r[t.store]}"]::before`,c=`.bard-fieldtype .bts-styles-preview[data-bts-match~="${i}"]`;e.push(...this.parseCss(a,r.cp_css||"")),e.push(...this.parseMenuCss(c,r.cp_css||"")),r.cp_badge&&e.push(`${l} { content: "${r.name}"; }`)}),e}gatherDivCss(t){const e=[],i=[".bard-fieldtype .ProseMirror >",".bard-fieldtype .ProseMirror div[data-bts] >"],r=t.major>=4?"statamic/cp/build/assets/tailwind":"statamic/cp/css/cp",o=Array.from(document.styleSheets).find(n=>n.href&&n.href.includes(r));return Array.from(o.cssRules).filter(n=>n.selectorText&&n.selectorText.startsWith(i[0])).forEach(n=>e.push(n.cssText.replaceAll(i[0],i[1]))),e}parseCss(t,e){return typeof e=="string"?[`${t} { ${e} }`]:Object.entries(e).map(([i,r])=>{const o=i.includes("&")?i.replace("&",t):`${t} ${i}`,n=typeof r=="object"?Object.entries(r).map(([a,l])=>`${a}: ${l};`).join(""):r;return`${o} { ${n} }`})}parseMenuCss(t,e){return this.parseCss(t,typeof e=="string"?e:e["&"]||"")}}Statamic.booting(()=>{new nt(Statamic.$config.get("bard-texstyle"))});
